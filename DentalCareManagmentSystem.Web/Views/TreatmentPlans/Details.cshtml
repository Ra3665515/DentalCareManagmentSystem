@model DentalCareManagmentSystem.Application.DTOs.TreatmentPlanDto
@{
    ViewData["Title"] = "Treatment Plan Details";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
  
        <div class="btn-group">
            <a href="@Url.Action("Details", "Patients", new { id = Model.PatientId })"
               class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to Patient
            </a>
          
        </div>
    </div>

    <!-- Plan Information Card -->
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-file-medical me-2"></i>Treatment Plan Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <th width="40%">Plan ID:</th>
                                    <td>@Model.Id</td>
                                </tr>
                                <tr>
                                    <th>Patient:</th>
                                    <td>@Model.PatientName</td>
                                </tr>
                                <tr>
                                    <th>Created Date:</th>
                                    <td>@Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <table class="table table-borderless">
                                <tr>
                                    <th width="40%">Created By:</th>
                                    <td>@Model.CreatedBy</td>
                                </tr>
                               
                                </tr>
                                <tr>
                                    <th>Total Cost:</th>
                                    <td class="h5 text-success fw-bold">@Model.TotalCost.ToString("N2") EGP</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Treatment Items -->
            <div class="card mt-4">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-list me-2"></i>Treatment Items
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Items.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead class="table-light">
                                    <tr>
                                        <th>Service Name</th>
                                        <th width="120" class="text-center">Quantity</th>
                                        <th width="120" class="text-end">Unit Price</th>
                                        <th width="120" class="text-end">Total</th>
                                        @if (!Model.IsCompleted)
                                        {
                                            <th width="100" class="text-center">Actions</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td>
                                                <div class="fw-semibold">@item.Name</div>
                                                @if (!string.IsNullOrEmpty(item.PriceListItemName))
                                                {
                                                    <small class="text-muted">@item.PriceListItemName</small>
                                                }
                                            </td>
                                            <td class="text-center">@item.Quantity</td>
                                            <td class="text-end">@item.Price.ToString("C")</td>
                                            <td class="text-end fw-bold text-primary">@item.LineTotal.ToString("N2") EGP</td>                                            @if (!Model.IsCompleted)
                                            {
                                                <td class="text-center">
                                                    <div class="btn-group btn-group-sm">
                                                        <!-- Update Quantity Form -->
                                                        <form method="post"
                                                              asp-action="UpdateItemQuantity"
                                                              class="d-inline">
                                                            <input type="hidden" name="itemId" value="@item.Id" />
                                                            <div class="input-group input-group-sm" style="width: 120px;">
                                                                <input type="number" name="quantity" value="@item.Quantity"
                                                                       min="1" max="100" class="form-control form-control-sm" />
                                                                <button type="submit" class="btn btn-outline-primary btn-sm">
                                                                    <i class="fas fa-sync-alt"></i>
                                                                </button>
                                                            </div>
                                                        </form>

                                                        <!-- Delete Item Form -->
                                                        <form method="post"
                                                              asp-action="DeleteItem"
                                                              class="d-inline ms-1"
                                                              onsubmit="return confirm('Are you sure you want to remove this item?');">
                                                            <input type="hidden" name="itemId" value="@item.Id" />
                                                            <button type="submit" class="btn btn-outline-danger btn-sm">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </form>
                                                    </div>
                                                </td>
                                            }
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="table-group-divider">
                                    <tr>
                                        <th colspan="3" class="text-end">Grand Total:</th>
                                        <th class="text-end text-success h5">@Model.TotalCost.ToString("C")</th>
                                        @if (!Model.IsCompleted)
                                        {
                                            <th></th>
                                        }
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-clipboard-list fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No Treatment Items</h5>
                            <p class="text-muted">Add treatment items to this plan to get started.</p>
                            @if (!Model.IsCompleted)
                            {
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addItemModal">
                                    <i class="fas fa-plus me-1"></i> Add First Item
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Actions Sidebar -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-cogs me-2"></i>Plan Actions
                    </h5>
                </div>
                <div class="card-body">
                    @if (!Model.IsCompleted)
                    {
                        <!-- Complete Plan -->
                        <form method="post" asp-action="CompletePlan" class="mb-3">
                            <input type="hidden" name="planId" value="@Model.Id" />
                            <button type="submit" class="btn btn-success w-100"
                                    onclick="return confirm('Are you sure you want to mark this plan as completed? This action cannot be undone.');">
                                <i class="fas fa-check-circle me-1"></i> Complete Plan
                            </button>
                        </form>

                        <!-- Add Item Button -->
                        <button type="button" class="btn btn-primary w-100 mb-3" data-bs-toggle="modal" data-bs-target="#addItemModal">
                            <i class="fas fa-plus me-1"></i> Add Treatment Item
                        </button>
                    }

                    <!-- Delete Plan -->
                    <form method="post" asp-action="DeletePlanConfirmed">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-outline-danger w-100"
                                onclick="return confirm('Are you sure you want to delete this treatment plan? This action cannot be undone.');">
                            <i class="fas fa-trash me-1"></i> Delete Plan
                        </button>
                    </form>

                    <!-- Status Info -->
                    <div class="mt-4 p-3 bg-light rounded">
                        <h6 class="mb-2">Plan Status</h6>
                        @if (Model.IsCompleted)
                        {
                            <p class="mb-1 text-success">
                                <i class="fas fa-check-circle me-1"></i> This plan has been completed.
                            </p>
                            <small class="text-muted">No further modifications can be made.</small>
                        }
                        else
                        {
                            <p class="mb-1 text-warning">
                                <i class="fas fa-clock me-1"></i> This plan is in progress.
                            </p>
                            <small class="text-muted">You can add, modify, or remove treatment items.</small>
                        }
                    </div>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="card mt-4">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-bar me-2"></i>Quick Stats
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Total Items:</span>
                        <strong>@Model.Items.Count</strong>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Total Quantity:</span>
                        <strong>@Model.Items.Sum(i => i.Quantity)</strong>
                    </div>
                    <div class="d-flex justify-content-between">
                        <span>Average Price:</span>
                        <strong>@(Model.Items.Any() ? Model.Items.Average(i => i.Price).ToString("C") : "$0.00")</strong>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Item Modal -->
@if (!Model.IsCompleted)
{
    <div class="modal fade" id="addItemModal" tabindex="-1" aria-labelledby="addItemModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addItemModalLabel">Add Treatment Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form method="post" asp-action="AddItem">
                    <div class="modal-body">
                        <input type="hidden" name="planId" value="@Model.Id" />

                        <div class="mb-3">
                            <label for="priceListItemId" class="form-label">Select Service *</label>
                            <select class="form-select" id="priceListItemId" name="priceListItemId" required>
                                <option value="">-- Select Service --</option>
                                <!-- سيتم ملؤه بالجافاسكريبت -->
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="quantity" class="form-label">Quantity *</label>
                            <input type="number" class="form-control" id="quantity" name="quantity"
                                   value="1" min="1" max="100" required>
                        </div>

                        <div id="priceInfo" class="alert alert-info d-none">
                            <strong>Price: </strong><span id="itemPrice">$0.00</span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add Item</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const addItemModal = document.getElementById('addItemModal');
            if (addItemModal) {
                addItemModal.addEventListener('show.bs.modal', function() {
                    loadPriceListItems();
                });
            }

            const serviceSelect = document.getElementById('priceListItemId');
            if (serviceSelect) {
                serviceSelect.addEventListener('change', function() {
                    updatePriceDisplay();
                });
            }
        });

        async function loadPriceListItems() {
            try {
                const response = await fetch('@Url.Action("GetPriceListItems", "TreatmentPlans")');
                const items = await response.json();

                const select = document.getElementById('priceListItemId');
                select.innerHTML = '<option value="">-- Select Service --</option>';

                items.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item.id;
                    option.textContent = `${item.name} - ${item.price}`;
                    option.setAttribute('data-price', item.price);
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('Error loading price list items:', error);
            }
        }

        function updatePriceDisplay() {
            const select = document.getElementById('priceListItemId');
            const selectedOption = select.options[select.selectedIndex];
            const quantity = document.getElementById('quantity').value;

            if (selectedOption.value && selectedOption.dataset.price) {
                const price = parseFloat(selectedOption.dataset.price);
                const total = price * quantity;

                document.getElementById('itemPrice').textContent = `${price.toFixed(2)} each | Total: ${total.toFixed(2)}`;
                document.getElementById('priceInfo').classList.remove('d-none');
            } else {
                document.getElementById('priceInfo').classList.add('d-none');
            }
        }
    </script>
}