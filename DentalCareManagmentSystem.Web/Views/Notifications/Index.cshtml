@model List<DentalCareManagmentSystem.Application.DTOs.AppointmentDto>

@{
    ViewData["Title"] = "Today's Appointments";
}


<div class="container-fluid py-4 fade-in">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold text-primary mb-1">
                <i class="fas fa-calendar-day me-2"></i>Today's Appointments
            </h2>
            <p class="text-muted mb-0">@DateTime.Today.ToString("dddd, MMMM dd, yyyy")</p>
        </div>

        <div class="d-flex gap-2">
            <a href="javascript:history.back()" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back
            </a>
          
        </div>
    </div>

    <!-- الإحصائيات -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card stats-card primary h-100">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Appointments
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card stats-card success h-100">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Completed
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(a => a.Status == "Completed")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card stats-card warning h-100">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Pending
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(a => a.Status == "Scheduled")</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clock fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="empty-state">
            <i class="fas fa-calendar-times fa-4x text-muted mb-3"></i>
            <h4 class="text-muted">No appointments for today</h4>
            <p class="text-muted">All caught up! No appointments scheduled for today.</p>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-header bg-light">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-list me-2"></i>Today's Appointments
                    </h5>
                    <span class="badge bg-primary status-badge">@Model.Count appointments</span>
                </div>
            </div>

            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th><i class="fas fa-user me-1"></i> Patient</th>
                                <th><i class="fas fa-phone me-1"></i> Phone</th>
                                <th><i class="fas fa-clock me-1"></i> Time</th>
                                <th><i class="fas fa-tag me-1"></i> Status</th>
                                <th><i class="fas fa-eye me-1"></i> View</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in Model.OrderBy(a => a.StartTime))
                            {
                                <tr class="align-middle">
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle me-3">
                                                @appointment.PatientName?[0]
                                            </div>
                                            <div>
                                                <h6 class="mb-0 fw-bold">@appointment.PatientName</h6>
                                                <small class="text-muted">@appointment.Date.ToString("MMM dd, yyyy")</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="text-nowrap">
                                            <i class="fas fa-phone text-muted me-1"></i>
                                            @appointment.PatientPhone
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge bg-light text-dark border">
                                            <i class="far fa-clock me-1"></i>
                                            @appointment.StartTime.ToString(@"hh\:mm") - @appointment.EndTime.ToString(@"hh\:mm")
                                        </span>
                                    </td>
                                    <td>
                                        @{
                                            var statusClass = appointment.Status switch
                                            {
                                                "Scheduled" => "bg-warning",
                                                "Completed" => "bg-success",
                                                "Cancelled" => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                        }
                                        <span class="badge @statusClass status-badge">@appointment.Status</span>
                                    </td>
                                    <td>
                                        <a href="/Notifications/Details/@appointment.Id"
                                           class="btn btn-outline-primary btn-sm"
                                           title="View Appointment Details">
                                            <i class="fas fa-external-link-alt"></i> Details
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // $('#refreshBtn').click(function () {
            //     const $btn = $(this);
            //     const $icon = $btn.find('i');

                $icon.addClass('fa-spin');
                $btn.prop('disabled', true);

                setTimeout(() => {
                    location.reload();
                }, 500);
            });
        });
    </script>
}